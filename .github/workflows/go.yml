name: Go

on:
  push:
    tags: ["v*"]
    paths-ignore:
      - "**/*.md"
      - "**/*.nix"
      - "**/*.lock"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**/*.md"
      - "**/*.nix"
      - "**/*.lock"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  build-macos:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  binaries-linux:
    needs: "build-linux"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: install gcc-aarch64-linux-gnu
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: generate binaries
        run: |
          OS=Linux ARCH=x86_64 make
          OS=Linux ARCH=aarch64 make

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-linux
          path: _output/binaries/

  binaries-macos:
    needs: "build-macos"
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: generate binaries
        run: |
          CGO_ENABLED=1 OS=Darwin ARCH=x86_64 make
          CGO_ENABLED=1 OS=Darwin ARCH=arm64 make

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-macos
          path: _output/binaries/


  release:
    needs: ["binaries-linux", "binaries-macos"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: artifacts-linux
          path: _output/binaries/
      - uses: actions/download-artifact@v3
        with:
          name: artifacts-macos
          path: _output/binaries/
      - name: create release
        if: github.event_name != 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          tag="${GITHUB_REF##*/}"

          hub release create
          -a _output/binaries/colima-Darwin-x86_64
          -a _output/binaries/colima-Darwin-x86_64.sha256sum
          -a _output/binaries/colima-Darwin-arm64
          -a _output/binaries/colima-Darwin-arm64.sha256sum
          -a _output/binaries/colima-Linux-x86_64
          -a _output/binaries/colima-Linux-x86_64.sha256sum
          -a _output/binaries/colima-Linux-aarch64
          -a _output/binaries/colima-Linux-aarch64.sha256sum
          -m "${tag}" --draft "${tag}"
